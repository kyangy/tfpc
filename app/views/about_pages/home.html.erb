<section class="about-page">
	<h1 class="about-title">Welcome to TFPC English Ministry</h1>
	<section class="about-primary">
		<div class="container">
			<div class="row">
				<div class="col-lg-6">
					<%= image_tag ('people.jpg') %>
				</div>

				<div class="col-lg-6 primary-p">
					<p>
						The English Ministry at TFPC was launched in 2009 to serve the growing 2nd Generation Korean American and Asian American Community here in the South Bay. 
					</p>
					<p>
						We welcome all walks of life, young and old, families and singles, seekers and searcher, lost and found to come together and discover who God is in our midst and share in his presence.
					</p>
					<p>
						The English Ministry belongs to the larger multi-generational church.  There is an older 1st Generation Korean speaking congregation and a younger vibrant 3rd generation Sunday School, with our EM sandwiched nicely in between.
					</p>
					<p>
						We welcome you to come and visit with us and be a part of Godâ€™s community!
					</p>
				</div>
			</div>
		</div>
	</section>
	<!-- about-primary -->

	<section>
		<div class="about-secondary">
			  
		</div>
	</section>
	<!-- about-secondary -->

	<section class="about-third">
		<div class="container">
			<div class="row">
				<div class="col-lg-6 third-p">
					<p>
						Pastor Billy Song begins his 13th year of ministry here at TFPC, and has served as the Education Pastor until the New English Ministry was launched in 2009.  Locally raised, Pastor Billy studied at U.S.C. and went east to study at Princeton Theological Seminary, returning to serve in the 2nd Generation ministry ever since.
					</p>
					<p>
						He and his wife Christine have a daughter Abigail.
					</p>
					<p>
						 Rev. Billy Song can be reached at  kahunabill@aol.com
					</p>
				</div>

				<div class="col-lg-6">
					<h2 class="third-title">Pastor Billy Song</h2>
					<%= image_tag 'billy.jpg', size:"400x300" %>
				</div>
			</div>
		</div>
	</section>
	<!-- about-third -->

</section>

<script>

//Simple animated example of d3-cloud - https://github.com/jasondavies/d3-cloud
//Based on https://github.com/jasondavies/d3-cloud/blob/master/examples/simple.html

// Encapsulate the word cloud functionality
function wordCloud(selector) {

    var fill = d3.scale.category20();

    //Construct the word cloud's SVG element
    var svg = d3.select(selector).append("svg")
        .attr("width", 500)
        .attr("height", 500)
        .append("g")
        .attr("transform", "translate(250,250)");

    //Draw the word cloud
    function draw(words) {
        var cloud = svg.selectAll("g text")
                        .data(words, function(d) { return d.text; })

        //Entering words
        cloud.enter()
            .append("text")
            .style("font-family", "Impact")
            .style("fill", function(d, i) { return fill(i); })
            .attr("text-anchor", "middle")
            .attr('font-size', 1)
            .text(function(d) { return d.text; });

        //Entering and existing words
        cloud
            .transition()
                .duration(600)
                .style("font-size", function(d) { return d.size + "px"; })
                .attr("transform", function(d) {
                    return "translate(" + [d.x, d.y] + ")rotate(" + d.rotate + ")";
                })
                .style("fill-opacity", 1);

        //Exiting words
        cloud.exit()
            .transition()
                .duration(200)
                .style('fill-opacity', 1e-6)
                .attr('font-size', 1)
                .remove();
    }


    //Use the module pattern to encapsulate the visualisation code. We'll
    // expose only the parts that need to be public.
    return {

        //Recompute the word cloud for a new set of words. This method will
        // asycnhronously call draw when the layout has been computed.
        //The outside world will need to call this function, so make it part
        // of the wordCloud return value.
        update: function(words) {
            d3.layout.cloud().size([500, 500])
                .words(words)
                .padding(5)
                .rotate(function() { return ~~(Math.random() * 2) * 90; })
                .font("Impact")
                .fontSize(function(d) { return d.size; })
                .on("end", draw)
                .start();
        }
    }

}

//Some sample data - http://en.wikiquote.org/wiki/Opening_lines
var words = [
    "You don't know about me without you have read a book called The Adventures of Tom Sawyer but that ain't no matter.",
]

//Prepare one of the sample sentences by removing punctuation,
// creating an array of words and computing a random size attribute.
function getWords(i) {
    return words[i]
            .replace(/[!\.,:;\?]/g, '')
            .split(' ')
            .map(function(d) {
                return {text: d, size: 10 + Math.random() * 60};
            })
}

//This method tells the word cloud to redraw with a new set of words.
//In reality the new words would probably come from a server request,
// user input or some other source.
function showNewWords(vis, i) {
    i = i || 0;

    vis.update(getWords(i ++ % words.length))
    setTimeout(function() { showNewWords(vis, i + 1)}, 2000)
}

//Create a new instance of the word cloud visualisation.
var myWordCloud = wordCloud('body');

//Start cycling through the demo data
showNewWords(myWordCloud);


</script>
